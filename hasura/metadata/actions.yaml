actions:
  - name: create_group
    definition:
      kind: synchronous
      handler: '{{EXTERNAL_API_ENDPOINT}}/api/group/create'
      forward_client_headers: true
      request_transform:
        body:
          action: transform
          template: |-
            {
              "name": {{$body.input.req.name}},
              "publicKey": {{$body.input.req.public_key}},
              "securityData": {{$body.input.req.security_data}}
            }
        version: 2
        template_engine: Kriti
    permissions:
      - role: user
    comment: Creates a group, and adds creator as admin of group
  - name: find_full_actors
    definition:
      kind: ""
      handler: '{{EXTERNAL_API_ENDPOINT}}/api/actor/find-full'
      forward_client_headers: true
      request_transform:
        body:
          action: transform
          template: |-
            {
              "actorIds": {{$body.input.req.actorIds}}
            }
        version: 2
        template_engine: Kriti
    permissions:
      - role: user
    comment: Enables the retrieval for full actor details the user has access to
  - name: generate_login_challenge
    definition:
      kind: synchronous
      handler: '{{EXTERNAL_API_ENDPOINT}}/api/login/challenge'
      request_transform:
        body:
          action: transform
          template: |-
            {
              "address": {{$body.input.req.address}}
            }
        version: 2
        template_engine: Kriti
    permissions:
      - role: unauthenticated
      - role: user
  - name: login
    definition:
      kind: synchronous
      handler: '{{EXTERNAL_API_ENDPOINT}}/api/login/login'
      request_transform:
        body:
          action: transform
          template: |-
            {
              "address": {{$body.input.req.address}},
              "signature": {{$body.input.req.signature}}
            }
        version: 2
        template_engine: Kriti
    permissions:
      - role: unauthenticated
      - role: user
    comment: Logs the user into the system
  - name: share
    definition:
      kind: synchronous
      handler: '{{EXTERNAL_API_ENDPOINT}}/api/shared-data/share'
      forward_client_headers: true
      request_transform:
        body:
          action: transform
          template: "{\n  \"toUserId\": {{$body.input.req.to_user_id}},\n  \"originalOwnedDataId\": {{$body.input.req.original_owned_data_id}},\n  \"cid\": {{$body.input.req.cid}},\n  \"iv\": {{$body.input.req.iv}},\n  \"mac\": {{$body.input.req.mac}}\n  \n}"
        version: 2
        template_engine: Kriti
    permissions:
      - role: user
    comment: Share data with another user
  - name: soft_delete_owned_data
    definition:
      kind: synchronous
      handler: '{{EXTERNAL_API_ENDPOINT}}/api/owned-data/delete'
      forward_client_headers: true
      request_transform:
        body:
          action: transform
          template: |-
            {
              "id": {{$body.input.req.id}}
            }
        version: 2
        template_engine: Kriti
    permissions:
      - role: user
    comment: Delete owned data
  - name: update_owned_data_metadata
    definition:
      kind: synchronous
      handler: '{{EXTERNAL_API_ENDPOINT}}/api/owned-data/update-metadata'
      forward_client_headers: true
      request_transform:
        body:
          action: transform
          template: |-
            {
              "id": {{$body.input.req.id}},
              "name": {{$body.input.req.name}},
              "description": {{$body.input.req.description}}
            }
        version: 2
        template_engine: Kriti
    permissions:
      - role: user
    comment: Update owned data metadata
  - name: update_shared_data_metadata
    definition:
      kind: synchronous
      handler: '{{EXTERNAL_API_ENDPOINT}}/api/shared-data/update-metadata'
      forward_client_headers: true
      request_transform:
        body:
          action: transform
          template: |-
            {
              "id": {{$body.input.req.id}},
              "name": {{$body.input.req.name}},
              "description": {{$body.input.req.description}}
            }
        version: 2
        template_engine: Kriti
    permissions:
      - role: user
    comment: Update share data metadata
  - name: upsert_owned_data
    definition:
      kind: synchronous
      handler: '{{EXTERNAL_API_ENDPOINT}}/api/owned-data/upsert'
      forward_client_headers: true
      request_transform:
        body:
          action: transform
          template: |-
            {
              "id": {{$body.input.req.id}},
              "name": {{$body.input.req.name}},
              "description": {{$body.input.req.description}},
              "cid": {{$body.input.req.cid}},
              "type": {{$body.input.req.type}},
              "iv": {{$body.input.req.iv}},
              "mac": {{$body.input.req.mac}}
            }
        version: 2
        template_engine: Kriti
    permissions:
      - role: user
    comment: Inserts a new or updates an owned data record
custom_types:
  enums: []
  input_objects:
    - name: GenerateLoginChallengeRequest
    - name: LoginRequest
    - name: UpsertOwnedDataRequest
    - name: DeleteOwnedDataRequest
    - name: ShareRequest
    - name: UpdateSharedDataMetadataRequest
    - name: SoftDeleteOwnedDataRequest
    - name: UpdateOwnedDataMetadataRequest
    - name: CreateGroupRequest
    - name: FindFullActorsRequest
  objects:
    - name: GenerateLoginChallengeResponse
    - name: LoginResponse
    - name: User
    - name: OwnedData
      relationships:
        - remote_table:
            schema: public
            name: user
          name: owner_user
          source: hashed-private
          type: object
          field_mapping:
            owner_user_id: id
    - name: AffectedRowsResponse
    - name: SharedData
      relationships:
        - remote_table:
            schema: public
            name: user
          name: from_user
          source: hashed-private
          type: object
          field_mapping:
            from_user_id: id
        - remote_table:
            schema: public
            name: user
          name: to_user
          source: hashed-private
          type: object
          field_mapping:
            to_user_id: id
        - remote_table:
            schema: public
            name: owned_data
          name: original_owned_data
          source: hashed-private
          type: object
          field_mapping:
            original_owned_data_id: id
    - name: CreateGroupResponse
    - name: PrivateInfo
    - name: FullActor
  scalars: []
