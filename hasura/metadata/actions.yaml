actions:
  - name: create_group
    definition:
      kind: synchronous
      handler: '{{EXTERNAL_API_ENDPOINT}}/api/group/create'
      forward_client_headers: true
      request_transform:
        body:
          action: transform
          template: |-
            {
              "name": {{$body.input.req.name}},
              "publicKey": {{$body.input.req.public_key}},
              "securityData": {{$body.input.req.security_data}}
            }
        version: 2
        template_engine: Kriti
    permissions:
      - role: user
    comment: Creates a group, and adds creator as admin of group
  - name: find_full_actors
    definition:
      kind: ""
      handler: '{{EXTERNAL_API_ENDPOINT}}/api/actor/find-full'
      forward_client_headers: true
      request_transform:
        body:
          action: transform
          template: |-
            {
              "actorIds": {{$body.input.req.actorIds}}
            }
        version: 2
        template_engine: Kriti
    permissions:
      - role: user
    comment: Enables the retrieval for full actor details the user has access to
  - name: generate_login_challenge
    definition:
      kind: synchronous
      handler: '{{EXTERNAL_API_ENDPOINT}}/api/login/challenge'
      request_transform:
        body:
          action: transform
          template: |-
            {
              "address": {{$body.input.req.address}}
            }
        version: 2
        template_engine: Kriti
    permissions:
      - role: unauthenticated
      - role: user
  - name: login
    definition:
      kind: synchronous
      handler: '{{EXTERNAL_API_ENDPOINT}}/api/login/login'
      forward_client_headers: true
      request_transform:
        body:
          action: transform
          template: |-
            {
              "address": {{$body.input.req.address}},
              "signature": {{$body.input.req.signature}}
            }
        version: 2
        template_engine: Kriti
    permissions:
      - role: unauthenticated
      - role: user
    comment: Logs the user into the system
  - name: refresh_token
    definition:
      kind: ""
      handler: '{{EXTERNAL_API_ENDPOINT}}/api/login/refresh'
      forward_client_headers: true
    permissions:
      - role: unauthenticated
      - role: user
    comment: Refresh token
custom_types:
  enums: []
  input_objects:
    - name: GenerateLoginChallengeRequest
    - name: LoginRequest
    - name: UpsertOwnedDataRequest
    - name: DeleteOwnedDataRequest
    - name: ShareRequest
    - name: UpdateSharedDataMetadataRequest
    - name: SoftDeleteOwnedDataRequest
    - name: UpdateOwnedDataMetadataRequest
    - name: CreateGroupRequest
    - name: FindFullActorsRequest
  objects:
    - name: GenerateLoginChallengeResponse
    - name: LoginResponse
    - name: User
    - name: OwnedData
    - name: AffectedRowsResponse
    - name: SharedData
    - name: CreateGroupResponse
    - name: PrivateInfo
    - name: FullActor
    - name: RefreshTokenResponse
  scalars: []
